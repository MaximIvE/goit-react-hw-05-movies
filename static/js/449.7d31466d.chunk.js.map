{"version":3,"file":"static/js/449.7d31466d.chunk.js","mappings":"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","sources":["components/DetailsCard/DetailsCard.styled.jsx","components/DetailsCard/DetailsCard.jsx","components/AdditionalInformation/AdditionalInformation.styled.jsx","components/AdditionalInformation/AdditionalInformation.jsx","pages/MovieDetalilsPage/MovieDetalilsPage.styled.jsx","pages/MovieDetalilsPage/MovieDetalilsPage.jsx","shared/api/moviesApi.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\npadding: 12px 20px;\ndisplay: flex;\n`;\n\nexport const Description = styled.div`\n    margin-left: 20px;\n   max-width: 80%;\n`;\n\nexport const ImgWrapper = styled.div`\n    max-width: 20%;\n    min-width: 160px;\n`;\n\n\nexport const Img = styled.img`\ndisplay: block;\nwidth: 100%;\nheight: auto;\n`;\n\nexport const H2 = styled.h2`\n    margin-top: 0;\n`;","import {Wrapper, Description, Img, ImgWrapper, H2} from './DetailsCard.styled';\n\nconst DetailsCard = ({data}) => {\n    const {title, release_date, vote_average, overview, genres, poster_path} = data;\n    const genresAll =  genres.reduce((previousValue, genre) => {\n            return previousValue + genre.name + \" \";\n        }, \"\");\n\n    return <Wrapper>\n    <ImgWrapper>\n        <Img src={\"https://image.tmdb.org/t/p/w300\"+poster_path} alt={title} />\n    </ImgWrapper>\n    <Description>\n        <H2>{`${title} (${release_date.slice(0, 4)})`}</H2>\n        <p>{`User Score: ${Math.round(vote_average*100)/10}%`}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genresAll}</p>\n    </Description>\n</Wrapper>\n}\n\nexport default DetailsCard;","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\npadding: 12px 20px;\n`;\n\nexport const LinkSt = styled(Link)`\ntext-decoration: none;\nfont-size: large;\nfont-weight: 500;\n`;","import { useLocation } from 'react-router-dom';\nimport {Wrapper, LinkSt} from './AdditionalInformation.styled';\n\nconst AdditionalInformation = ({id}) => {\n    const location =useLocation();\n    const back = location.state.from || \"/\";\n    // to={`/movies/${id}/cast`}\n    return (\n        <Wrapper>\n            <h3>Additional information</h3>\n            <ul>\n                <li key=\"cast\"   ><LinkSt state={{back}} to={`/movies/${id}/cast`}   >Cast   </LinkSt></li>\n                <li key=\"reviews\"><LinkSt state={{back}} to={`/movies/${id}/reviews`}>Reviews</LinkSt></li>\n            </ul>\n        </Wrapper>\n    )\n}\n\nexport default AdditionalInformation","import styled from \"styled-components\";\n\nexport const DetailPAge = styled.div`\n    padding: 0 20px;\n`;","// import { Location } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation, useNavigate, Outlet  } from \"react-router-dom\";\n\nimport DetailsCard from 'components/DetailsCard';\nimport AdditionalInformation from 'components/AdditionalInformation';\nimport {getDetals} from '../../shared/api/moviesApi';\n\nimport {DetailPAge} from './MovieDetalilsPage.styled';\n\n\n\nconst MovieDetalist = () => {\n    const [data, setData] = useState(()=>null);\n    const [error, setError] = useState(()=>null);\n    const [loading, setLoading] = useState(()=>false);\n\n    const {id} = useParams();\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const back = location.state.from || \"/\";\n\n    useEffect(()=>{\n        const fetchMovies = async() => { \n        try{setError(null);\n            setLoading(true);\n            const res = await getDetals(id);\n                    if ( res.status !== 200){ throw new Error (`${res.status} | ${res.statusText}`)};\n                    setLoading(false);\n                    setData(res.data);\n        } catch (error) {\n                setError(error);\n                setLoading(false);\n                setData(null);\n        };};\n            fetchMovies();\n    },[id]);\n    return (\n    <>\n        <DetailPAge>\n            <button type=\"button\" onClick={() => navigate(back)}>Go back</button>\n            { data &&   <DetailsCard data={data}/>}\n            {loading && <h2>Loading...</h2>}\n            {error && <h2>Error.  Unable to display movies.</h2>}      \n        </DetailPAge>\n        { data && <hr/>}\n            {data && <AdditionalInformation id={data.id}/>}\n        { data && <hr/>}\n        <Outlet />\n    </>\n    )\n}\n\nexport default MovieDetalist;","import axios from 'axios';\n\n// Екземпляр класу\nconst instance  = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params:{\n        api_key: \"833791a5e754a1f0443be5fc62646bdb\",\n    }\n});\n\n// Популярні за 1 день\nexport const getPopular = async () => await instance.get('trending/movie/day');\n\n// Пошук фільму ключовим словом &language=en-US&page=1&include_adult=false\nexport const getQuery = async query => await instance.get('search/movie',{\n        params:{\n            include_adult: false,\n            query,\n        }\n    });\n\n// Запит повної інформації про фільм &language=en-US\nexport const getDetals = async movieId => await instance.get(`movie/${movieId}`);\n\n// запит інформації про акторський склад &language=en-US\nexport const getCast = async movieId => await instance.get(`movie/${movieId}/credits`);\n\n// запит оглядів для сторінки кінофільму &language=en-US&page=1\nexport const getReviews = async movieId => await instance.get(`movie/${movieId}/reviews`);"],"names":["Wrapper","styled","Description","ImgWrapper","Img","H2","data","title","release_date","vote_average","overview","genres","poster_path","genresAll","reduce","previousValue","genre","name","src","alt","slice","Math","round","LinkSt","Link","id","back","useLocation","state","from","to","DetailPAge","useState","setData","error","setError","loading","setLoading","useParams","location","navigate","useNavigate","useEffect","fetchMovies","getDetals","res","status","Error","statusText","type","onClick","instance","axios","baseURL","params","api_key","getPopular","get","getQuery","query","include_adult","movieId","getCast","getReviews"],"sourceRoot":""}